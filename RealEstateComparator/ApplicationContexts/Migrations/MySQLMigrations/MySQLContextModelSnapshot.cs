// <auto-generated />
using ApplicationContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ApplicationContexts.Migrations.MySQLMigrations
{
    [DbContext(typeof(MySQLContext))]
    partial class MySQLContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("ApplicationContexts.Models.ApartComplex", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("varchar(50) CHARACTER SET utf8mb4")
                        .HasMaxLength(50);

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("varchar(200) CHARACTER SET utf8mb4")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("ApartComplexes");
                });

            modelBuilder.Entity("ApplicationContexts.Models.Apartment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ComplexId")
                        .HasColumnType("int");

                    b.Property<int>("DwellingSpaceMax")
                        .HasColumnType("int");

                    b.Property<int>("DwellingSpaceMin")
                        .HasColumnType("int");

                    b.Property<bool>("HasMultipleFloors")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("NumberOfRooms")
                        .HasColumnType("int");

                    b.Property<int>("SquareMeterPriceMax")
                        .HasColumnType("int");

                    b.Property<int>("SquareMeterPriceMin")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ComplexId");

                    b.ToTable("Apartments");
                });

            modelBuilder.Entity("ApplicationContexts.Models.Apartment", b =>
                {
                    b.HasOne("ApplicationContexts.Models.ApartComplex", "Complex")
                        .WithMany("Apartments")
                        .HasForeignKey("ComplexId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
